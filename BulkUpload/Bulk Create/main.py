import math
import requests
import json
import pandas as pd
import re

# =============================================================function import =============================================================
from utils import create_formated_data,delete_files_in_folder

sheet = "Franklord_updated.xlsx"
brand = "Franklord"
ondc_status = "LIVE_ON_ONDC"
status = "QC_PASS"
data = pd.read_excel("./data/excel/"+ sheet)
# pankaj token
token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlzX3Bob25lX3ZlcmlmaWVkIjp0cnVlLCJyb2xlIjoiVVNFUiIsInNpZ25hdHVyZSI6Imh0dHBzOi8vc3RvcmFnZS5nb29nbGVhcGlzLmNvbS92YWFuaWotdXNlci1zaWduYXR1cmUvUGFua2FqIFNpbmdoLWZMQmtoVlFVZEVaRWpWRUJaUllYL0lNR18yMDIzMTAxMF8yMTE5NDAuanBnIiwiY3JlYXRlZF9hdCI6eyJfc2Vjb25kcyI6MTY5NDg1MzYwOCwiX25hbm9zZWNvbmRzIjo0NDgwMDAwMDB9LCJiYW5rIjp7Imlmc2NfY29kZSI6IkNOUkIyMzQ1IiwiYWNjb3VudF9udW1iZXIiOjQ1Nzg0NzM0NzM5NDgzOSwiYmVuZWZpY2lhcnlfbmFtZSI6IlBhbmthaiIsImFjY291bnRfdHlwZSI6IlNhdmluZ3MiLCJicmFuY2hfYWRkcmVzcyI6IkJhbmsgUm9hZCJ9LCJjb21wYW55X2xvZ28iOiJodHRwczovL2VuY3J5cHRlZC10Ym4wLmdzdGF0aWMuY29tL2ltYWdlcz9xPXRibjpBTmQ5R2NSQUhYUGx1cTZHdFRSUERJSFJ2NWtKUHk4NnVGanA1c083aGcmdXNxcD1DQVUiLCJpc19nc3Rpbl92ZXJpZmllZCI6dHJ1ZSwiY29tcGFueSI6IklNIFRlY2ggUHZ0IEx0ZC4iLCJjb21wYW55X3VybCI6Imh0dHBzOi8vY29zbWljLXNlbGtpZS05M2ZhNTUubmV0bGlmeS5hcHAiLCJzdG9yZV90aW1pbmciOnsiY2xvc2UiOiIxODozMCIsIm9wZW4iOiI5OjMwIn0sImVtYWlsIjoic2luZ2hwYW5rYWo3MDU3QGdtYWlsLmNvbSIsImFncmVlbWVudCI6dHJ1ZSwibW9iaWxlIjo5NTMyNjk2NDYxLCJncHMiOiIxMi45MTE5MDAsIDc3LjY0NDYwMCIsIm5hbWUiOiJQYW5rYWogU2luZ2giLCJhZ3JlZW1lbnRfdGltZSI6IjIwMjMtMDktMjJUMTA6MTc6MzYuMTc0WiIsImF2YWlsYWJpbHR5Ijp7ImVuYWJsZSI6ZmFsc2UsInRpbWVzdGFtcCI6IjIwMjMtMTEtMDhUMDY6MDE6MTMuMjUxWiJ9LCJ0YXQiOiJQMTBEIiwicHJvZmlsZV9pbWciOiJodHRwczovL3N0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vc2hvcC1jaXJjdWl0LXVzZXItZGF0YS9pbWFnZS9wcm9maWxlLXBpY3R1cmUvUGFua2FqIFNpbmdoLWZMQmtoVlFVZEVaRWpWRUJaUllYL21hbGUtdXNlci1hdmF0YXItaWNvbi1pbi1mbGF0LWRlc2lnbi1zdHlsZS1wZXJzb24tc2lnbnMtaWxsdXN0cmF0aW9uLXBuZy53ZWJwIiwiZ3N0aW4iOiJndmRmbmdkZmtnaGRjIiwibG9jYXRpb25zIjpbeyJhZGRyZXNzIjp7ImNvdW50cnkiOiJJbmRpYSIsInBpbmNvZGUiOjI3MzIwOSwiY2l0eSI6IkJhcmllcGFyIiwic3RyZWV0IjoieXl5IiwiZGlzdHJpY3QiOiJHb3Jha2hwdXIiLCJsb2NhbGl0eSI6Inh4eCIsInN0YXRlIjoiVXR0YXIgUHJhZGVzaCJ9LCJwaWNrdXBfbG9jYXRpb24iOiJIb21lIDEiLCJncHMiOiIyNi42ODAwNTIsIDgzLjEyODczMjUiLCJ0aW1lIjp7InNjaGVkdWxlIjp7ImhvbGlkYXlzIjpbXX0sInJhbmdlIjp7InN0YXJ0IjoiIiwiZW5kIjoiIn0sImxhYmVsIjoiIiwidGltZXN0YW1wIjoiMjAyNC0wMS0xNVQwOToyOTozMC4zMjJaIn0sImxvY2F0aW9uX2lkIjoiYTAxZGRjMTBjN2I5NGExYmE0ZDU0YjJhYzZmOTJjYTEifSx7ImFkZHJlc3MiOnsiY291bnRyeSI6IkluZGlhIiwicGluY29kZSI6MjczMjA5LCJjaXR5IjoiQmFyaWVwYXIiLCJzdHJlZXQiOiJhYWEiLCJkaXN0cmljdCI6IkdvcmFraHB1ciIsImxvY2FsaXR5Ijoienp6Iiwic3RhdGUiOiJVdHRhciBQcmFkZXNoIn0sInBpY2t1cF9sb2NhdGlvbiI6IkhvbWUgMiIsImdwcyI6IjI2LjY4MDA1MiwgODMuMTI4NzMyNSIsInRpbWUiOnsic2NoZWR1bGUiOnsiaG9saWRheXMiOltdfSwicmFuZ2UiOnsic3RhcnQiOiIiLCJlbmQiOiIifSwibGFiZWwiOiIiLCJ0aW1lc3RhbXAiOiIyMDI0LTAxLTE1VDA5OjI5OjU3LjExMFoifSwibG9jYXRpb25faWQiOiJlZTcxMjI3ZTgwNzk0MmM1OTY5MWI2MTVmNjNjNmMxZSJ9LHsiYWRkcmVzcyI6eyJjb3VudHJ5IjoiSW5kaWEiLCJwaW5jb2RlIjoyMjYwMTAsImNpdHkiOiJHb210aW5hZ2FyIiwic3RyZWV0IjoiSW5kcmEgcHJhaXN0aGFuIG1hcmciLCJkaXN0cmljdCI6Ikx1Y2tub3ciLCJsb2NhbGl0eSI6IkxldmFuIGN5YmVyIGhlaWdodCIsInN0YXRlIjoiVXR0YXIgUHJhZGVzaCJ9LCJwaWNrdXBfbG9jYXRpb24iOiJPZmZpY2UiLCJncHMiOiIyNi44NTU4NjYwNzkxNjY2NywgODAuOTk5MjI3NjU5NzIyMjIiLCJ0aW1lIjp7InNjaGVkdWxlIjp7ImhvbGlkYXlzIjpbXX0sInJhbmdlIjp7InN0YXJ0IjoiIiwiZW5kIjoiIn0sImxhYmVsIjoiIiwidGltZXN0YW1wIjoiMjAyNC0wMS0xNVQwOTo0MDo1Ny43OTdaIn0sImxvY2F0aW9uX2lkIjoiYTZiOTQyY2FkM2MyNDJiYzkzYzk4NDk0YjAwODIxMWUifSx7ImFkZHJlc3MiOnsiY291bnRyeSI6IkluZGlhIiwicGluY29kZSI6MjI2MDEwLCJjaXR5IjoiR29tdGluYWdhciIsInN0cmVldCI6ImFiYyIsImRpc3RyaWN0IjoiTHVja25vdyIsImxvY2FsaXR5IjoieHl6Iiwic3RhdGUiOiJVdHRhciBQcmFkZXNoIn0sInBpY2t1cF9sb2NhdGlvbiI6Ik9mZmljZSAxIiwiZ3BzIjoiMjYuODU1ODY2MDc5MTY2NjcsIDgwLjk5OTIyNzY1OTcyMjIyIiwidGltZSI6eyJzY2hlZHVsZSI6eyJob2xpZGF5cyI6W119LCJyYW5nZSI6eyJzdGFydCI6IiIsImVuZCI6IiJ9LCJsYWJlbCI6IiIsInRpbWVzdGFtcCI6IjIwMjQtMDEtMTVUMDk6NDE6NDMuMjE3WiJ9LCJsb2NhdGlvbl9pZCI6IjkzNTBiMTJjZDRlZDQ5NTI5OTVmZmVlMjRmZmU4MzE3In1dLCJkZXNjcmlwdGlvbiI6IlRoaXMgaXMgZGVzY3JpcHRpb24uLi4uIiwidXBkYXRlZF9hdCI6IjIwMjQtMDYtMjBUMDk6MDQ6NTIuNTc0WiIsInN0YXR1cyI6IkFDVElWRSIsIm9yZGVyX21pbl92YWx1ZSI6Ijk5IiwiaWQiOiJmTEJraFZRVWRFWkVqVkVCWlJZWCIsImF2YXRhciI6ImFzc2V0cy9pbWFnZXMvYXZhdGFycy9tYWxlLTA3LmpwZyJ9LCJpYXQiOjE3MjAxNjc3NTR9.iL-dKRMILQtjN32lXWhLlB6-rOhU_7aRJggzAKF9AHU"

# target user token
# token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlzX3Bob25lX3ZlcmlmaWVkIjp0cnVlLCJyb2xlIjoiVVNFUiIsInNpZ25hdHVyZSI6bnVsbCwiZGVzY3JpcHRpb24iOm51bGwsImNyZWF0ZWRfYXQiOiIyMDI0LTA3LTE1VDA1OjU2OjIzLjU3MVoiLCJnc3RpbiI6IjI3QUdRUEs5ODcxUjFaMSIsImJhbmsiOnsiaWZzY19jb2RlIjoiIiwiYWNjb3VudF9udW1iZXIiOiIiLCJiZW5lZmljaWFyeV9uYW1lIjoiIiwiYWNjb3VudF90eXBlIjoiIiwiYnJhbmNoX2FkZHJlc3MiOiIifSwiY29tcGFueV9sb2dvIjoiaHR0cHM6Ly9lbmNyeXB0ZWQtdGJuMC5nc3RhdGljLmNvbS9pbWFnZXM_cT10Ym46QU5kOUdjUkFIWFBsdXE2R3RUUlBESUhSdjVrSlB5ODZ1RmpwNXNPN2hnJnVzcXA9Q0FVIiwiaXNfZ3N0aW5fdmVyaWZpZWQiOnRydWUsImNvbXBhbnkiOiJGUkFOS0xPUkQiLCJjb21wYW55X3VybCI6bnVsbCwic3RvcmVfdGltaW5nIjp7ImNsb3NlIjoiMTg6MzAiLCJvcGVuIjoiOTozMCJ9LCJlbWFpbCI6InJhanlvZ2ltcGV4QGdtYWlsLmNvbSIsImFncmVlbWVudCI6dHJ1ZSwidGF0IjoiUDVEIiwibW9iaWxlIjo5OTg3ODk0NTU1LCJvcmRlcl9taW5fdmFsdWUiOjUwMCwic3RvcmUiOltdLCJncHMiOiIxOS4yMzMyMzQ3ODI2MDg2OSwgNzMuMjE0NzAwMDAwMDAwMDEiLCJhdmFpbGFiaWx0eSI6eyJlbmFibGUiOnRydWUsInRpbWVzdGFtcCI6IjIwMjQtMDctMTVUMDU6NTY6MjMuNTcxWiJ9LCJwcm9maWxlX2ltZyI6Imh0dHBzOi8vc3RhdGljLnZlY3RlZXp5LmNvbS9zeXN0ZW0vcmVzb3VyY2VzL3ByZXZpZXdzLzAwMy8yNDAvMzgzL25vbl8yeC9iZXN0LXNlbGxlci1nb2xkZW4tYmFkZ2UtaXNvbGF0ZWQtaWxsdXN0cmF0aW9uLXZlY3Rvci5qcGciLCJuYW1lIjoiUkFKWU9HSU1QRVgiLCJhZ3JlZW1lbnRfdGltZSI6IjIwMjQtMDctMTVUMDU6NTY6MjMuNTcxWiIsImxvY2F0aW9ucyI6W3siYWRkcmVzcyI6eyJwaW5jb2RlIjo0MjEzMDIsImNvdW50cnkiOiJJbmRpYSIsInN0ZF9jb2RlIjoiMDIyIiwiY2l0eSI6Ik1hbmtvbGkgTmFrYSIsInN0cmVldCI6IkFuanVyIEdhb24gUmQiLCJkaXN0cmljdCI6IkJoaXdhbmRpIiwibG9jYWxpdHkiOiJSLksgQnVpbGRpbmcsIEEgV2luZywgR2FsYSBObzotMTA0LzEwOS8xMTAiLCJzdGF0ZSI6Ik1haGFyYXNodHJhIn0sInBpY2t1cF9sb2NhdGlvbiI6IlJBSllPR0lNUEVYI1IuSyBCdWlsZGluZywgQSBXaW5nLCBHYWxhIE5vOi0xMDQvMTA5LzExMCM0MjEzMDI5OTg3ODk0NTU1IiwidGltZSI6eyJzY2hlZHVsZSI6eyJob2xpZGF5cyI6W119LCJsYWJlbCI6ImVuYWJsZSIsInRpbWVzdGFtcCI6IjIwMjQtMDctMTVUMDU6NTc6MzIuNDk5WiJ9LCJncHMiOiIxOS4yMzMyMzQ3ODI2MDg2OSwgNzMuMjE0NzAwMDAwMDAwMDEiLCJsb2NhdGlvbl9pZCI6IjRlZDFlYjAxZGI2ZjQwNzJiOGE5OTgxODBlMWQ3NGJhIn1dLCJzdGF0dXMiOiJBQ1RJVkUiLCJ1cGRhdGVkX2F0IjoiMjAyNC0wNy0xNlQwNTo0NzoyNy4wNjlaIiwiaWQiOiJnRlB0aU5mZ0NycjZRdmRvSlFpQSIsImF2YXRhciI6ImFzc2V0cy9pbWFnZXMvYXZhdGFycy9tYWxlLTA3LmpwZyJ9LCJpYXQiOjE3MjEyMDk3MDl9.LB31y31bL2T46deLNVPZo4C50qGu8wlagD74x-VxqQM"
for index, row in data.iterrows():
    print(f"=========================================================item number {index} =======================================================")
    if index < 50:
        delete_files_in_folder("./data/temp") 
        refinedPayload = create_formated_data(row,token,brand,index,ondc_status,status)
    # print(refinedPayload)
    # print(row)
    # if index == 1:
    #     break
    break